# -*- coding: utf-8 -*-
"""10-1 . 케라스를 이용한 회귀모형.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wcDzg8zMOopG3pLQm3C5wHfDqOZoe1u3

##케리스를 이용한 회귀모형형
* 데이터입력
"""

import numpy as np
import tensorflow as tf
from tensorflow.keras import Sequential
from tensorflow.keras.layers import Dense

x = np.array([17, 8, 10, 20, 13, 22, 14, 3, 1, 26])
y = np.array([33, 13, 22, 25, 24, 38, 20, 10, 3, 37])
x = x.reshape(-1, 1)

print("x데이터 형태:", x.shape)
print("y데이터 형태:", y.shape)

"""* 케라스를 이용한 선형회귀모형 설정"""

model = Sequential()
model.add(Dense(units=1, activation='linear', input_dim=1))  # 예측하고자 하는 유닛 1개,  활성화 함수 : 항등함수를 씀(linear) => 선형회귀모형을 씀, input_dim은 x 개수 (입력개수)
model.summary()

"""*** 파라미터 2개 : 절편, x1

* 모형학습
"""

model.compile(loss='mse')  #평균제곱오차(MSE) 최소화하는 방향으로
model.fit(x, y, epochs=10000, verbose=1)  # 파라미터 학습

"""* 학습된 파라미터 값"""

model.weights   # 기울기(w)가 양수여야 하는데 그렇게 추정됨?????????

"""* 입력데이터 x의 모형에 대한 예측값"""

y_pred =model.predict(x)

"""# 다항 로지스틱 회귀모형 (붓꽃의 품종 분류)
 * 데이터 입력
"""

# 연습

import pandas as pd
import numpy as np
from sklearn import datasets
from sklearn.model_selection import train_test_split
from tensorflow.keras import Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras.utils import to_categorical


iris = datasets.load_iris()

df = pd.DataFrame(iris['data'], columns=iris['feature_names'])
df.columns = ['sepal_length', 'sepal_width', 'petal_length', 'petal_width']
df['Target'] = iris['target']
df

"""* 훈련데이터와 시험데이터로 분리"""

X_data = df.loc[:, 'sepal_length':'petal_width']
y_data = df.loc[:, 'Target']
y_data = to_categorical(y_data)    # 원-핫-인코딩

X_train, X_test, y_train, y_test = train_test_split(X_data, y_data, test_size=0.2, shuffle=True, random_state=33)

print("훈련데이터 X와 y의 차원", X_train.shape, y_train.shape)
print("테스트데이터 X와 y의 차원", X_test.shape, y_test.shape)

"""* 케라스를 이용한 다항로지스틱회귀모형 설정

"""

model = Sequential()
model.add(Dense(units=y_train.shape[1], activation='softmax', input_dim=4))    # units=C=3, input_dim=n_x=4
model.summary()

"""* 훈련데이터를 이용한 모형학습"""

model.compile(loss='categorical_crossentropy', metrics=['acc'])  # 교차 엔트로피, 중간중간에 보여달라!
model.fit(X_train, y_train, epochs=100, verbose=1)

model.weights

"""* 학습데이터를 이용한 모형 평가"""

model.evaluate(X_train, y_train)

"""* 시험데이터를 이용한 모형 평가"""

model.evaluate(X_test, y_test)

