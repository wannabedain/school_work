# -*- coding: utf-8 -*-
"""10-3 인공신경망 - 보스턴주택.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KbdmrDOLreo2iMZYDKWkyLIxJmNj4teR

## 인공신경망(다층퍼셉트론)을 이요한 보스턴 주태가격예측
* 데이터 입력
"""

import numpy as np
import tensorflow as tf
from tensorflow.keras import Sequential
from tensorflow.keras.layers import Dense
from sklearn import datasets
import random          #seed 설정하기 위해 필요
from sklearn.model_selection import train_test_split
import pandas as pd
import matplotlib.pyplot as plt

SEED = 12
random.seed(SEED)
np.random.seed(SEED)
tf.random.set_seed(SEED)

boston = datasets.load_boston()
X_df = pd.DataFrame(boston['data'], columns=boston['feature_names'])
y_df = pd.DataFrame(boston['target'], columns=['Target'])
print("x데이터 형태:", X_df.shape)
print("y데이터 형태:", y_df.shape)

"""* 훈련데이터와 시험데이터 분리"""

X_train, X_test, y_train, y_test = train_test_split(X_df, y_df, test_size=0.2, shuffle=True, random_state=SEED)

print("훈련데이터 X와 y의 차원", X_train.shape, y_train.shape)
print("시험데이터 X와 y의 차원", X_test.shape, y_test.shape)

"""* 다층퍼셉트론 모형 설정"""

model = Sequential()
model.add(Dense(units = 32, activation='relu', input_dim = X_df.shape[1]))   #X_df.shape[1] =13
model.add(Dense(units = 16, activation ='relu'))
model.add(Dense(units = 8, activation ='relu'))
model.add(Dense(units = 1, activation ='linear'))
model.summary()

"""*  훈련데이터를 이용한 모형 학습"""

model.compile(optimizer='adam', loss='mse')
history = model.fit(X_train, y_train, epochs=1000, batch_size=32, validation_split=0.25) #훈련데이터 중 75%를 검증데이터에 사용 : validation_split=0.25

"""###### 검증데이터의 mse값보다는 훨씬 작은 값으로 나옴  loss

* 시험데이터를 이용한 모형학습
"""

model.evaluate(X_test, y_test)

"""###### loss값을 계산해볼 수 있음~~~~~~~

* 에폭별 비용함수 값의 변화를 알 수 있음
"""

plt.figure(figsize=(10,10))
plt.plot(range(5,1000), history.history['loss'][5:], label='Train', color='red')          # epoch 5부터
plt.plot(range(5,1000), history.history['val_loss'][5:], label='Validation', color='purple')
plt.xlabel('Epochs')
plt.ylabel('mse')
plt.legend()
plt.show()


## valiation 이 더 높아지는 것 같지 않으므로 더 epoch를 하면 더 좋을 것 같음
#70p까지가 시험범위!